{"version":3,"file":"static/js/387.ed94830b.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,EAAAA,GAAH,8JAQJC,EAAOD,EAAAA,EAAAA,GAAH,+CAIJE,EAAQF,EAAAA,EAAAA,IAAH,0CAILG,EAAOH,EAAAA,EAAAA,EAAH,oIAQJI,EAAYJ,EAAAA,EAAAA,EAAH,sJASTK,EAAeL,EAAAA,EAAAA,EAAH,0J,SCrBV,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,GAAUH,GAFtC,OAEUI,EAFV,OAGIL,EAAQK,EAAUN,MAHtB,gDAKIO,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,8BACmB,IAAhBF,EAAKU,QACJ,SAACnB,EAAD,UACGS,EAAKW,KAAI,SAAAC,GAAK,OACb,UAACnB,EAAD,WACGmB,EAAMC,cACL,gBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGb,SAACtB,EAAD,CACEoB,IAAI,yFACJC,IAAKH,EAAMI,QAIf,SAACrB,EAAD,UAAOiB,EAAMI,QACb,SAACpB,EAAD,UAAYgB,EAAMK,cAdTL,EAAMM,GADJ,OAoBjB,SAACrB,EAAD,8BAIP,C,8LCxDKsB,EAAM,mCAECC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IACrB,gDACA,CACEC,OAAQ,CACNC,QAASJ,KALY,cACrBK,EADqB,yBASpBA,EAASC,MATW,2CAAH,qDAYbC,EAAW,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNM,MAAOD,EACPJ,QAASJ,KANU,cACnBK,EADmB,yBAUlBA,EAASC,MAVS,2CAAH,sDAaXI,EAAY,mCAAG,WAAMX,GAAN,uFACHG,EAAAA,EAAAA,IAAA,6CAAgDH,GAAM,CAC3EI,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASZpB,EAAS,mCAAG,WAAMa,GAAN,uFACAG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,YAErB,CACEI,OAAQ,CACNC,QAASJ,KALQ,cACjBK,EADiB,yBAShBA,EAASC,MATO,2CAAH,sDAYTK,EAAY,mCAAG,WAAMZ,GAAN,uFACHG,EAAAA,EAAAA,IAAA,6CACiBH,EADjB,YAErB,CACEI,OAAQ,CACNC,QAASJ,KALW,cACpBK,EADoB,yBASnBA,EAASC,MATU,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/MoviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 250px);\n  gap: 16px;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  border-radius: 4px;\n`;\n\nexport const Image = styled.img`\n  height: 375px;\n`;\n\nexport const Name = styled.p`\n  font-size: 25px;\n  font-weight: 600;\n  color: orangered;\n  margin-bottom: 5px;\n  text-align: center;\n`;\n\nexport const Character = styled.p`\n  font-size: 25px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: black;\n  line-height: 30px;\n  text-align: center;\n`;\n\nexport const Notification = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: orangered;\n  line-height: 30px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCast } from '../../components/MoviesAPI';\n\nimport {\n  List,\n  Item,\n  Image,\n  Name,\n  Character,\n  Notification,\n} from '../Cast/Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    async function fetchFilmCast() {\n      try {\n        const movieCast = await fetchCast(moviesId);\n        setCast(movieCast.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchFilmCast();\n  }, [moviesId]);\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <List>\n          {cast.map(actor => (\n            <Item key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <Image\n                  src=\"https://uxwing.com/wp-content/themes/uxwing/download/peoples-avatars/username-icon.svg\"\n                  alt={actor.name}\n                />\n              )}\n\n              <Name>{actor.name}</Name>\n              <Character>{actor.character}</Character>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Notification>Cast not found</Notification>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '88e21d85616f2eea57c4948e250da063';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetails = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n"],"names":["List","styled","Item","Image","Name","Character","Notification","Cast","useState","cast","setCast","moviesId","useParams","useEffect","fetchCast","movieCast","console","log","fetchFilmCast","length","map","actor","profile_path","src","alt","name","character","id","KEY","fetchTrending","axios","params","api_key","response","data","fetchSearch","input","query","fetchDetails","fetchReviews"],"sourceRoot":""}