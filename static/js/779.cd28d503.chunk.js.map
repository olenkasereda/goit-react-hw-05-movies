{"version":3,"file":"static/js/779.cd28d503.chunk.js","mappings":"8SAEMA,EAAM,mCAECC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IACrB,gDACA,CACEC,OAAQ,CACNC,QAASJ,KALY,cACrBK,EADqB,yBASpBA,EAASC,MATW,2CAAH,qDAYbC,EAAW,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNM,MAAOD,EACPJ,QAASJ,KANU,cACnBK,EADmB,yBAUlBA,EAASC,MAVS,2CAAH,sDAaXI,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,6CAAgDS,GAAM,CAC3ER,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASZM,EAAS,mCAAG,WAAMD,GAAN,uFACAT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAASJ,KALQ,cACjBK,EADiB,yBAShBA,EAASC,MATO,2CAAH,sDAYTO,EAAY,mCAAG,WAAMF,GAAN,uFACHT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAASJ,KALW,cACpBK,EADoB,yBASnBA,EAASC,MATU,2CAAH,qD,8JChDZQ,EAASC,EAAAA,EAAAA,EAAH,+GAQNC,EAAUD,EAAAA,EAAAA,EAAH,0JAUPE,EAAeF,EAAAA,EAAAA,EAAH,0J,SCbV,SAASG,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BX,EAAAA,EAAAA,IAAaS,GAF5C,OAEUG,EAFV,OAGIJ,EAAWI,EAAaC,SAH5B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,8BACsB,IAAnBF,EAAQU,QACP,wBACGV,EAAQW,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAACnB,EAAD,uBAAkBkB,MAClB,SAAChB,EAAD,UAAUiB,MAFHtB,EADE,OAQf,SAACM,EAAD,iCAIP,C","sources":["components/MoviesAPI.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '88e21d85616f2eea57c4948e250da063';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetails = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const Author = styled.p`\n  font-size: 30px;\n  font-weight: 600;\n  color: orangered;\n\n  margin-bottom: 5px;\n`;\n\nexport const Content = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  margin-bottom: 15px;\n  color: black;\n  line-height: 25px;\n\n  letter-spacing: 0em;\n`;\n\nexport const Notification = styled.p`\n  font-size: 30px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: orangered;\n  line-height: 30px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviews } from '../../components/MoviesAPI';\n\nimport { Author, Content, Notification } from '../Reviews/Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviewsMovie() {\n      try {\n        const movieReviews = await fetchReviews(moviesId);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviewsMovie();\n  }, [moviesId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <Author> Author: {author}</Author>\n              <Content>{content}</Content>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Notification>Reviews not found</Notification>\n      )}\n    </>\n  );\n}\n"],"names":["KEY","fetchTrending","axios","params","api_key","response","data","fetchSearch","input","query","fetchDetails","id","fetchCast","fetchReviews","Author","styled","Content","Notification","Reviews","useState","reviews","setReviews","moviesId","useParams","useEffect","movieReviews","results","console","log","fetchReviewsMovie","length","map","author","content"],"sourceRoot":""}