{"version":3,"file":"static/js/120.3d8b7274.chunk.js","mappings":"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","sources":["components/MoviesAPI.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '88e21d85616f2eea57c4948e250da063';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetails = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  justify-content: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nimport { Wrapper } from './Loader.styled';\n\nconst Loader = ({ loading }) => {\n  return (\n    <Wrapper>\n      <PropagateLoader loading={loading} color=\"#3f51b5\" size={20} />\n    </Wrapper>\n  );\n};\n\nLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\ndisplay: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n     opacity: 1;\n`;\n\nexport const SearchIcon = styled(FcSearch)`\n  width: 40px;\n  height: 40px;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 30px;\n  border-radius: 4px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  margin-top: 10px;\n  padding: 2px;\n  font-size: 23px;\n  font-weight: 400;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport Loader from '../../components/Loader/Loader';\nimport { fetchSearch } from '../../components/MoviesAPI';\n\nimport {\n  SearchForm,\n  SearchButton,\n  SearchIcon,\n  SearchInput,\n  Item,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const input = searchParams.get('input') ?? '';\n  const [searchInput, setSearchInput] = useState(input ?? '');\n  const location = useLocation();\n\n  function updateInput(event) {\n    setSearchInput(event.currentTarget.value);\n    if (event.currentTarget.value === '') {\n      setSearchParams({});\n      setMovies([]);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchInput.trim() === '') {\n      toast('Enter image name');\n      return;\n    }\n\n    setSearchParams({ input: searchInput });\n  }\n\n  useEffect(() => {\n    if (input === '') {\n      return;\n    }\n    async function fetchMovies() {\n      try {\n        setLoading(true);\n\n        const searchMovies = await fetchSearch(input);\n\n        setMovies(searchMovies.results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovies();\n  }, [input]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchButton type=\"submit\">\n          <SearchIcon />\n        </SearchButton>\n\n        <SearchInput\n          name=\"input\"\n          value={searchInput}\n          onChange={updateInput}\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n        />\n      </SearchForm>\n\n      {loading && <Loader loading={loading} />}\n      {!loading && movies && input !== '' && (\n        <ul>\n          {movies.map(movie => (\n            <Item key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                <p>{movie.title}</p>\n              </Link>\n            </Item>\n          ))}\n        </ul>\n      )}\n\n      <Toaster position=\"top-right\" />\n    </>\n  );\n}\n"],"names":["KEY","fetchTrending","axios","params","api_key","response","data","fetchSearch","input","query","fetchDetails","id","fetchCast","fetchReviews","Wrapper","styled","loading","color","size","SearchForm","SearchButton","SearchIcon","FcSearch","SearchInput","Item","Movies","useState","movies","setMovies","setLoading","useSearchParams","searchParams","setSearchParams","get","searchInput","setSearchInput","location","useLocation","useEffect","searchMovies","results","console","log","fetchMovies","onSubmit","event","preventDefault","trim","toast","type","name","value","onChange","currentTarget","autocomplete","autoFocus","placeholder","map","movie","to","state","from","title","position"],"sourceRoot":""}