{"version":3,"file":"static/js/33.0aa065f8.chunk.js","mappings":"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","sources":["components/MoviesAPI.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '88e21d85616f2eea57c4948e250da063';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchSearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchDetails = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  display: inline-flex;\n  padding: 5px 5px;\n  color: orangered;\n  font-size: 30px;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  border-radius: 4px;\n\n  border: none;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  border-bottom: 1px solid rgb(105, 105, 105);\n`;\n\nexport const Image = styled.img`\n  width: 400px;\n  border-radius: 4px;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 15px;\n`;\n\nexport const MovieTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 15px;\n  color: orangered;\n`;\n\nexport const Criteria = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  color: orangered;\n  margin-bottom: 10px;\n`;\n\nexport const Details = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 15px;\n  color: black;\n  line-height: 30px;\n`;\n\nexport const Average = styled.span`\n  display: inline-block;\n  color: white;\n  background-color: #2f9e99;\n  border-radius: 5px;\n  padding: 1px 10px;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 25px;\n  padding: 8px 18px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const LinkContainer = styled.div`\n  margin-top: 20px;\n  margin-bottom: 25px;\n  text-align: center;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\n\nimport { fetchDetails } from '../../components/MoviesAPI';\n\nimport {\n  BackLink,\n  Container,\n  Image,\n  InfoContainer,\n  MovieTitle,\n  Criteria,\n  Details,\n  Average,\n  LinkContainer,\n  StyledLink,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState([]);\n  const { moviesId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchDetailsByMovie() {\n      try {\n        const movieDetails = await fetchDetails(moviesId);\n        setMovie(movieDetails);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDetailsByMovie();\n  }, [moviesId]);\n\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>â‡¦ Back</BackLink>\n      <Container>\n        {poster_path ? (\n          <Image\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <Image\n            src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Illustration_of_an_image.png\"\n            alt={title}\n          />\n        )}\n\n        <InfoContainer>\n          <MovieTitle>\n            {title} ({release_date && new Date(release_date).getFullYear()})\n          </MovieTitle>\n          <Details>\n            User score: <Average> {Math.round(vote_average * 10)}%</Average>\n          </Details>\n          <Criteria>Overview</Criteria>\n          <Details>{overview}</Details>\n          <Criteria>Geners</Criteria>\n          {genres && (\n            <Details>{genres.map(genre => genre.name).join(' ')}</Details>\n          )}\n        </InfoContainer>\n      </Container>\n      <LinkContainer>\n        <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </StyledLink>\n        <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </StyledLink>\n      </LinkContainer>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["KEY","fetchTrending","axios","params","api_key","response","data","fetchSearch","input","query","fetchDetails","id","fetchCast","fetchReviews","BackLink","styled","NavLink","Container","Image","InfoContainer","MovieTitle","Criteria","Details","Average","StyledLink","LinkContainer","MovieDetails","useState","movie","setMovie","moviesId","useParams","backLinkHref","useLocation","state","from","useEffect","movieDetails","console","log","fetchDetailsByMovie","poster_path","release_date","title","vote_average","overview","genres","to","src","alt","Date","getFullYear","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}